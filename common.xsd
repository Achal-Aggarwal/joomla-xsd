<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

    <xs:simpleType name="method">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                The default value install will be also used if the method attribute is not used. The install value means the installer will gracefully stop if
                it finds any existing file/folder of the new extension.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="install"/>
            <xs:enumeration value="upgrade"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="type">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                This attribute describes the type of the extension for the installer. Based on this type further requirements to sub-tags apply.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="component"/>
            <xs:enumeration value="file"/>
            <xs:enumeration value="language"/>
            <xs:enumeration value="library"/>
            <xs:enumeration value="module"/>
            <xs:enumeration value="package"/>
            <xs:enumeration value="plugin"/>
            <xs:enumeration value="template"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="version">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                String that identifies the version of Joomla for which this extension is developed.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:enumeration value="1.6"/>
            <xs:enumeration value="2.5"/>
            <xs:enumeration value="3.0"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="client">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                The client attribute allows you to specify for which application client the new module is available.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="site"/>
            <xs:enumeration value="administrator"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="update">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="schemas"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="schemas">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="schemapath" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="schemapath">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                This defines the directory that contains SQL files for component incremental database updates. You may choose to put the SQL files somewhere
                else in your component release, but make sure their location is documented here.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:attribute name="type" use="required" type="xs:NCName"/>
        </xs:complexType>
    </xs:element>


    <xs:element name="languages">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="language"/>
            </xs:sequence>
            <xs:attribute name="folder" type="xs:NCName"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="language">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string"> <!-- todo define a type filepath -->
                    <xs:attribute name="tag" use="required" type="xs:string"/>
                    <!-- todo define all locale -->
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="config">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="fields"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="fields">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="fieldset"/>
            </xs:sequence>
            <xs:attribute name="name" use="required" type="xs:NCName"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="fieldset">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="field"/>
            </xs:sequence>
            <xs:attribute name="name" use="required" type="xs:NCName"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="field">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="option"/>
            </xs:sequence>
            <xs:attribute name="class" type="xs:NMTOKEN"/>
            <xs:attribute name="cols" type="xs:integer"/>
            <xs:attribute name="default"/>
            <xs:attribute name="description" type="xs:NCName"/>
            <xs:attribute name="key_field" type="xs:NCName"/>
            <xs:attribute name="label" type="xs:NCName"/>
            <xs:attribute name="name" use="required" type="xs:NCName"/>
            <xs:attribute name="query"/>
            <xs:attribute name="rows" type="xs:integer"/>
            <xs:attribute name="size" type="xs:integer"/>
            <xs:attribute name="type" use="required" type="xs:NCName"/>
            <xs:attribute name="value_field" type="xs:NCName"/>
            <xs:attribute name="value" use="optional" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="option">
        <xs:complexType mixed="true">
            <xs:attribute name="value" use="required" type="xs:NMTOKEN"/>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="sql">
        <xs:sequence>
            <xs:element ref="sql"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="sql">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="file"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="file">
        <xs:complexType mixed="true">
            <xs:attribute name="charset" use="required" type="xs:NCName"/>
            <xs:attribute name="driver" use="required" type="xs:NCName"/>
            <xs:attribute name="folder" type="xs:NCName"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="folder" type="xs:string"/>
    <!-- todo could be a filepath -->

</xs:schema>
